// Mocks generated by Mockito 5.4.6 from annotations
// in android_wallet_mydsc/test/protocols/trust_ping/ping_first_strategy_test.dart.
// Do not manually edit this file.

// ignore_for_file: no_leading_underscores_for_library_prefixes
import 'dart:async' as _i6;

import 'package:android_wallet_mydsc/src/crypto/encryption/jwe_encryptor.dart'
    as _i3;
import 'package:android_wallet_mydsc/src/crypto/signing/ldp_signer.dart' as _i2;
import 'package:android_wallet_mydsc/src/protocols/trust_ping/trust_ping_controller.dart'
    as _i5;
import 'package:android_wallet_mydsc/src/protocols/trust_ping/trust_ping_message.dart'
    as _i7;
import 'package:android_wallet_mydsc/src/transport/service_didcomm.dart' as _i4;
import 'package:mockito/mockito.dart' as _i1;
import 'package:mockito/src/dummies.dart' as _i8;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: deprecated_member_use
// ignore_for_file: deprecated_member_use_from_same_package
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: must_be_immutable
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types
// ignore_for_file: subtype_of_sealed_class

class _FakeLdpSigner_0 extends _i1.SmartFake implements _i2.LdpSigner {
  _FakeLdpSigner_0(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeJweEncryptor_1 extends _i1.SmartFake implements _i3.JweEncryptor {
  _FakeJweEncryptor_1(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeDIDCommService_2 extends _i1.SmartFake
    implements _i4.DIDCommService {
  _FakeDIDCommService_2(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

/// A class which mocks [TrustPingController].
///
/// See the documentation for Mockito's code generation for more information.
class MockTrustPingController extends _i1.Mock
    implements _i5.TrustPingController {
  MockTrustPingController() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i2.LdpSigner get signer => (super.noSuchMethod(
        Invocation.getter(#signer),
        returnValue: _FakeLdpSigner_0(
          this,
          Invocation.getter(#signer),
        ),
      ) as _i2.LdpSigner);

  @override
  _i3.JweEncryptor get encryptor => (super.noSuchMethod(
        Invocation.getter(#encryptor),
        returnValue: _FakeJweEncryptor_1(
          this,
          Invocation.getter(#encryptor),
        ),
      ) as _i3.JweEncryptor);

  @override
  _i4.DIDCommService get commService => (super.noSuchMethod(
        Invocation.getter(#commService),
        returnValue: _FakeDIDCommService_2(
          this,
          Invocation.getter(#commService),
        ),
      ) as _i4.DIDCommService);

  @override
  _i6.Stream<_i7.TrustPingMessage> get onPingResponse => (super.noSuchMethod(
        Invocation.getter(#onPingResponse),
        returnValue: _i6.Stream<_i7.TrustPingMessage>.empty(),
      ) as _i6.Stream<_i7.TrustPingMessage>);

  @override
  _i6.Stream<String> get onPingTimeout => (super.noSuchMethod(
        Invocation.getter(#onPingTimeout),
        returnValue: _i6.Stream<String>.empty(),
      ) as _i6.Stream<String>);

  @override
  _i6.Future<String> sendPing(
    String? toDid, {
    bool? responseRequested = true,
    String? comment,
    int? timeoutSeconds = 30,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #sendPing,
          [toDid],
          {
            #responseRequested: responseRequested,
            #comment: comment,
            #timeoutSeconds: timeoutSeconds,
          },
        ),
        returnValue: _i6.Future<String>.value(_i8.dummyValue<String>(
          this,
          Invocation.method(
            #sendPing,
            [toDid],
            {
              #responseRequested: responseRequested,
              #comment: comment,
              #timeoutSeconds: timeoutSeconds,
            },
          ),
        )),
      ) as _i6.Future<String>);

  @override
  void dispose() => super.noSuchMethod(
        Invocation.method(
          #dispose,
          [],
        ),
        returnValueForMissingStub: null,
      );
}
